In this chapter we go over the methodology details of our experiment. We are interested in comparing the gaze behavior of the participants when they are presented with static or moving images accompanied by a related audible sentence.
This was done by collecting gaze data and analyzing the gaze behavior of the participants (@sec-analysis). 

## Participants

We had 10 people participating in our experiment between the ages 18 and 34 where nine people identified as male and one as female. Regarding their English level, most (6) people specified that they have reached at least a C1 level and the remaining (4) people were at a B2 level. Additionally, we asked the participants about their previous experience with eye-tracking. For the majority (7) it was the first time using eye-trackers, the other three stated that they have used eye-trackers before.

Overall, all the participants were able to complete the experiment successfully without significant complications.


## Study Design
We have a between-subject study design with one factor being the visual stimuli type. The factor has two possible levels, with one being static and the other in motion. 
The participants are exposed to all 64 audio stimuli, but whether the corresponding visual stimuli is static or in motion depends on their condition group, which was determined by their randomly assigned participant ID. For instance, if for stimuli nr. 5 the visual was static for condition group “Chicken”, the stimuli type was simply flipped for the other condition group “Wolf”. With this latin square design, we made sure that the stimuli/condition mappings were equally distributed among both condition groups, as long as the amount of participants in the groups were the same. The order of the stimuli overall was random for each participant by utilizing the random order function within OpenSesame. In summary, we have 64 audio stimuli with two possible matching visual stimuli. The participants were shown 32 visual stimuli for each category, which was determined by their randomly assigned condition group. 
Each trial started with a fixation dot for one second, followed by a preview of the four images for another second. Then, the audio started playing and the images were still shown x seconds after audio completion, after which the experiment switched back to the fixation dot and the trial was completed. The participant is then able to proceed to the next trial by looking at the fixation dot. A visualization of the trial sequence is shown in figure ![Figure 2.2.1](Images/Fig2_2_1.png).

## Materials & Stimuli
We have 64 audio stimuli in total with two matching visual stimuli versions, one consisting of four regular images and the other with four GIFs. 
The audio stimuli consisted of different sentences with the same structure: [location/time], [person] [verb] [object], e.g.: “At breakfast, the girl ate a croissant.”
The corresponding visual stimuli consists of four images with only one being closely related to the sentence. In the case of our example we have one image being a croissant and the remaining images being random inedible objects that are not related to breakfast. For the motion stimuli, we just picked out matching GIFs for the four static images. It was important, that the gives had the same speed. The exact specifications for static and motion stimuli as well as the audio stimuli can be found in the README-File of the experiment.  
We came up with the 64 different sentences by following the described structure and created corresponding audios with a free text-to-speech tool[^1].
For the visual stimuli we re-used most of the images from the visual world paradigm tutorial by OpenSesame [^2] and looked for additional ones using Google images. 

The stimuli creation process turned out to be a cumbersome process with handling the text-to-speech tool to include breaks and not speak too fast, finding visual stimuli to go with the audios and making sure that there is only one matching target sub-stimuli for each sentence. With our amount of stimuli, it is easy to lose sight of all the different sub-images. Therefore, to make the stimuli creation process easier, we used a central excel sheet as documentation where all the sentences and their corresponding sub-stimuli file names were stated, including which stimuli version (static or motion) will be shown for each condition group. In case something changed, we only had to change the central document and paste its contents to our trial loop in OpenSesame. 
In the following we provide some stimuli examples: 
![Figure 2.3.1](Images/Fig2_3_1.png)

[^1]: https://www.acoust.io/

[^2]: https://osdoc.cogsci.nl/3.3/tutorials/visual-world/



## Study Procedure and Apparatus {#sec-stdy-proc}
To test our hypothesis, we needed to invite participants to partake in our experiment. <br>
We recruited participants by asking for volunteers in our circle of acquaintances and invited the interested people between mid-July and August. Our target sample size was at least ten participants to end up with at least five people per condition group.
Once a participant arrived, they were given an information sheet with a brief description of the experiment, what kind of devices are going to get used and their corresponding safety risks. Additionally, they were asked to sign a standard consent form for studies with humans that are conducted at the university. 
To counterbalance the number of participants per condition group, we made them pick a card with a unique number between 1-10 and depending on whether the ID was an odd number or not, they got assigned to the corresponding condition group. 
The participants were asked to make themselves comfortable on the chair and adjust it accordingly to their preference, the same goes for the standard chin rest we used. Both the chair and the chin rest were disinfected before each participant arrived.
To execute the experiment, we used a standard desktop PC with two displays standing back-to-back in duplicate view, where one was directed to the participant and the other was used by the study conductor to start and supervise the experiment. 
For tracking, we used the stationary GazePoint GP3 HD eye-tracker in 150 Hz mode. 
When starting the experiment in OpenSesame, it starts out with initializing the eye-tracker and calibrating. The calibration process sometimes took multiple attempts until the results looked precise and accurate enough. We always told the participants that the calibration process can require multiple attempts to make sure they dont feel like they are doing something wrong. 
After the setup, the experiment itself lasted around 12 to 15 minutes. The participants had the control to proceed to the next trial in their own speed and they were informed, that they can take breaks in-between trials, if needed. 
Finally, we asked the participants some basic demographic information and their previous experiences with eye-tracking. We placed the demographic survey at the end of the experiment to avoid stereotype threat (see @spencer2016stereotype).

## Implementation

The experiment was conducted using the most recent version of OpenSesame 4.0 Melodramatic Milgram with the PyGame backend. The logic is divided into three distinct logical units. <br>
In the first unit is used to load custom configuration and preprocess static and motion stimuli. The config-file was managed with the YAML parser and emitter PyYAML [^3] and used to customize Texts, their layouts and positions, fixation dots, positions of stimuli as well as the general timing of the expermient. This way we kept the experiment flexible for minor changes during the pilot studies or possible future research. Since it was not possible to display videos or gifs in OpenSesame, we used the Python library OpenCV [^4] to extract the frames of each mp4-Videofile and save them into a separate folder for each stimulus inside a temporary directory. This directory can be specified in the custom config File, stated above. <br>
In the second unit of the experiment, the builtin calibration of OpenSesame was used to calibrate the eyetracker. And the group selection was displayed to the user. <br>
The third unit consists of the trial loop. For each trial, the user is shown first a fixation dot, then the four substimuli and afterwards the sentence to the pictures is played as stated in @sec-stdy-proc. The trial was designed in such a way that it would only commence once the user had fixated on the central fixation dot. In order to maintain a onsistent framerate for each motion stimulus, all the images were placed into an infinite loop, with each sub-stimulus containing an individual frame counter. This counter was reset to the beginning once it reached the final frame. Any concerns regarding the performance of the expriment could be cleared after extensive piloting. Once the designated sentence was played, the infinite loop was interrupted and the pause screen was displayed. The logging took place multiple times during the trial loop and finally logged with the OpenSesame logger. The logging will be discussed in @sec-logging.

[^3]: https://pypi.org/project/PyYAML/
[^4]: https://pypi.org/project/opencv-python/